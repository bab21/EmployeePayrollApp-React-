[{"C:\\Users\\hp\\Desktop\\HelloWorld\\employee-payroll-react\\src\\components\\payroll-form\\payroll-form.jsx":"1","C:\\Users\\hp\\Desktop\\HelloWorld\\employee-payroll-react\\src\\App.js":"2","C:\\Users\\hp\\Desktop\\HelloWorld\\employee-payroll-react\\src\\index.js":"3","C:\\Users\\hp\\Desktop\\HelloWorld\\employee-payroll-react\\src\\reportWebVitals.js":"4","C:\\Users\\hp\\Desktop\\HelloWorld\\employee-payroll-react\\src\\services\\EmployeeService.js":"5","C:\\Users\\hp\\Desktop\\HelloWorld\\employee-payroll-react\\src\\components\\home\\home.jsx":"6"},{"size":20896,"mtime":1608465714620,"results":"7","hashOfConfig":"8"},{"size":618,"mtime":1608409212748,"results":"9","hashOfConfig":"8"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"8"},{"size":784,"mtime":1608464635839,"results":"12","hashOfConfig":"8"},{"size":5033,"mtime":1608468019066,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"16","usedDeprecatedRules":"17"},"crc3lo",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\hp\\Desktop\\HelloWorld\\employee-payroll-react\\src\\components\\payroll-form\\payroll-form.jsx",["29","30","31","32","33","34","35"],"// import React, {userState,userEffect} from 'react';\r\nimport React, {Component} from 'react'\r\nimport profile1 from '../../assets/profile-images/Ellipse -3.png';\r\nimport profile2 from '../../assets/profile-images/Ellipse 1.png';\r\nimport profile3 from '../../assets/profile-images/Ellipse -8.png';\r\nimport profile4 from '../../assets/profile-images/Ellipse -7.png';\r\nimport './payroll-form.scss';\r\nimport logo from '../../assets/images/logo.png';\r\nimport {useParams,Link,withRouter} from 'react-router-dom';\r\nimport EmployeeService from '../../services/EmployeeService'\r\n\r\n// const PayrollForm = (props) => {\r\n//     let initialValue ={\r\n//         name: '',\r\n//         profileArray:[\r\n//             {url: '../../../assets/profile-images/Ellipse -3.png'},\r\n//             {url: '../../../assets/profile-images/Ellipse 1.png'},\r\n//             {url: '../../../assets/profile-images/Ellipse -8.png'},\r\n//             {url: '../../../assets/profile-images/Ellipse -7.png'}\r\n//         ],\r\n//         allDepartment:[\r\n//             'HR','Sales','Finance','Engineer','Others'\r\n//         ],\r\n//         departmentValue: [],\r\n//         gender: '',\r\n//         salary: '',\r\n//         day: '1',\r\n//         month: 'Jan',\r\n//         year: '2020',\r\n//         startDate: '',\r\n//         notes: '',\r\n//         id: '',\r\n//         profileUrl: '',\r\n//         isUpdate: false,\r\n//         error: {\r\n//             department: '',\r\n//             name: '',\r\n//             gender: '',\r\n//             salary: '',\r\n//             profileUrl: '',\r\n//             startDate: ''\r\n//         }\r\n//     }\r\n\r\n//     const [formValue,setForm]= useState(initialValue);\r\n\r\n//     const changeValue =(event) =>{\r\n//         setForm({...formValue,[event.target.name]:event.target.value})\r\n//     }\r\n\r\n//     const onCheckChange =(name) =>{\r\n//         let index = formValue.departmentValue.indexOf(name);\r\n//         let checkArray =[...formValue.departmentValue]\r\n//         if(index>-1)\r\n//             checkArray.splice(index,1)\r\n//         else \r\n//             checkArray.push(name);\r\n//         setForm({...formValue,departmentValue: checkArray});\r\n//     }\r\n\r\n//     const getChecked =(name) =>{\r\n//         return formValue.departmentValue && formValue.departmentValue.includes(name);\r\n//     }\r\n\r\n//     const validDate =async()=>{\r\n//         let isError =false;\r\n//         let error={\r\n//             department: '',\r\n//             name: '',\r\n//             gender: '',\r\n//             salary: '',\r\n//             profileUrl: '',\r\n//             startDate: ''\r\n//         }\r\n        \r\n//         if(formValue.name.length<1){\r\n//             error.name ='name is required field';\r\n//             isError = true;\r\n//         }\r\n\r\n//         if(formValue.gender.length<1){\r\n//             error.gender ='gender is required field'\r\n//             isError =true;\r\n//         }\r\n\r\n//         if(formValue.salary.length<1){\r\n//             error.gender ='salary is required field'\r\n//             isError =true;\r\n//         }\r\n//     }\r\n\r\n//     return(\r\n//         <div className=\"payroll-main\">\r\n//             <Toolbar/>\r\n//             <div className=\"content\">\r\n//                 <form className=\"form\" action=\"#\" onSubmit={save}>\r\n//                     <div className=\"form-head\">Employee Payroll form</div>\r\n//                     <div className=\"row-content\">\r\n//                         <label className=\"label text\" htmlFor=\"name\">Name</label>\r\n//                         <input className=\"input\" type=\"text\" id=\"name\" value={formValue.name} onChange={changeValue} placeholder=\"Your name...\"/>\r\n//                     </div>\r\n//                     <div className=\"error\">{formValue.error.name}</div>\r\n//                     <div className=\"row\">\r\n//                         <label>\r\n//                             <input type=\"radio\" checked={formValue.profileUrl=='../../assets/profile-images/Ellipse -3.png'} name=\"profileUrl\" \r\n//                                 value=\"../../assets/profile-images/Ellipse -3.png\" onChange={changeValue}/>\r\n\r\n//                         </label>\r\n//                     </div>\r\n//                 </form>\r\n//             </div>\r\n//             {/* <p> Hello </p> */}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\nclass PayrollForm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            id: this.props.match.params.id,\r\n            name: '',\r\n            salary: '',\r\n            notes: '',\r\n            day: '1',\r\n            month: 'Jan',\r\n            year: '2020',\r\n            gender: '',\r\n            profilePic: '',\r\n            departments: []\r\n        }\r\n        this.changeNameHandler=this.changeNameHandler.bind(this);\r\n        this.changeSalaryHandler=this.changeSalaryHandler.bind(this);\r\n        this.changeNotesHandler=this.changeNotesHandler.bind(this);\r\n        this.changeGenderHandler=this.changeGenderHandler.bind(this);\r\n        this.changeDayHandler=this.changeDayHandler.bind(this);\r\n        this.changeMonthHandler=this.changeMonthHandler.bind(this);\r\n        this.changeYearHandler=this.changeYearHandler.bind(this);\r\n        this.changeProfilePicHandler=this. changeProfilePicHandler.bind(this);\r\n        \r\n        // this.getChecked=this.getChecked.bind(this);\r\n        // this.onCheckChange=this.onCheckChange.bind(this);\r\n\r\n    }\r\n    componentWillMount(){\r\n        if(this.state.id === '_add'){\r\n            return\r\n        }else{\r\n            EmployeeService.getEmployeeById(this.state.id).then( (res) =>{\r\n                let employee = res.data.data;\r\n                console.log(employee);\r\n                let date= employee.startDate.split(\"-\");\r\n                let Oday=date[2];\r\n                let Omonth=date[1];\r\n                let Oyear=date[0];\r\n                let Oname=employee.name;\r\n                let Onotes=employee.notes;\r\n                let Odepartments=employee.departments;\r\n                let Osalary=employee.salary;\r\n                let Ogender=employee.gender;\r\n                let OprofilePic=employee.profilePic;\r\n\r\n                this.setState({name: Oname,\r\n                    salary: Osalary,\r\n                    gender: Ogender,\r\n                    notes: Onotes,\r\n                    profilePic: OprofilePic,\r\n                    departments: Odepartments,\r\n                    year: Oyear,\r\n                    day: Oday,\r\n                    month: Omonth\r\n                });\r\n            });\r\n        } \r\n        console.log(\"The state is\");\r\n        console.log(this.state);       \r\n    }\r\n    saveOrUpdateEmployee = (event) => {\r\n        event.preventDefault();\r\n        console.log(this.state.departments);\r\n        let employee = {\r\n            name: this.state.name,\r\n            departments : this.state.departments,\r\n            gender: this.state.gender,\r\n            salary: this.state.salary,\r\n            startDate: `${this.state.year}-${this.state.month}-${this.state.day}`,\r\n            notes: this.state.notes,\r\n            // id: formValue.id,\r\n            profilePic: this.state.profilePic,\r\n          };\r\n        console.log('employee => ' + JSON.stringify(employee));\r\n        // EmployeeService.createEmployee(employee);\r\n\r\n\r\n        if(this.state.id === '_add'){\r\n            EmployeeService.createEmployee(employee).then(res =>{\r\n                this.props.history.push('/home');\r\n            });\r\n        }else{\r\n            EmployeeService.updateEmployee(employee, this.state.id).then( res => {\r\n                this.props.history.push('/home');\r\n            });\r\n        }\r\n    }\r\n    getChecked =(name) =>{\r\n        return this.state.departments.includes(name);\r\n    }\r\n    onCheckChange =(event) =>{\r\n        \r\n        const target = event.target;\r\n        var value= target.value;\r\n        if(target.checked){\r\n            this.state.departments.push(value);\r\n        }\r\n        else{\r\n            this.state.departments.slice(value,1);\r\n        }\r\n        // console.log(this.state.departments);\r\n        // let index = this.state.departments.indexOf(name);\r\n        // let checkArray =this.state.departments;\r\n        // if(index>-1)\r\n        //     checkArray.splice(index,1)\r\n        // else \r\n        // checkArray.push(name);\r\n        // console.log(checkArray);\r\n        // this.setState({departments:checkArray});\r\n        // this.setState({departments: [...this.state.departments,name]});\r\n        // console.log(\"departments selected \"+this.state.departments);\r\n    }\r\n    changeNameHandler =(event)=>{\r\n        this.setState({name:event.target.value});\r\n        console.log(\"name is \"+this.state.name);\r\n    }\r\n    changeSalaryHandler =(event)=>{\r\n        this.setState({salary:event.target.value});\r\n        console.log(\"salary chosen is\"+this.state.salary);\r\n    }\r\n    changeNotesHandler =(event)=>{\r\n        this.setState({notes: event.target.value});\r\n        console.log(\"notes entered is \"+this.state.notes);\r\n    }\r\n    changeGenderHandler =(event)=>{\r\n        \r\n        this.setState({gender: event.target.value});\r\n        console.log(\"gender is\" + this.state.gender);\r\n    }\r\n    changeProfilePicHandler =(event)=>{\r\n        this.setState({profilePic: event.target.value});\r\n        console.log(\"profilepic is \"+this.state.profilePic);\r\n    }\r\n    changeDayHandler=(event)=>{\r\n        this.setState({day:event.target.value});\r\n        console.log(\"day entered is\"+this.state.day);\r\n    }\r\n    changeMonthHandler=(event)=>{\r\n        // let monthEntered= event.target.value;\r\n        this.setState({month:event.target.value});\r\n        console.log(\"month entered is\"+this.state.month);\r\n    }\r\n    changeYearHandler=(event)=>{\r\n        this.setState({year:event.target.value});\r\n        console.log(\"year entered is \"+this.state.year);\r\n    }\r\n    cancel(){\r\n        // this.props.history.push('/employees');\r\n    }\r\n    render(){\r\n        return(\r\n            \r\n            <div>\r\n                <header class=\"header-content header\">\r\n                    <div class=\"logo-content\">\r\n                        <img src={logo} alt=\"\"/>\r\n                        <div>\r\n                            <span class=\"emp-text\">EMPLOYEE</span><br></br>\r\n                            <span class=\"emp-text emp-payroll\">PAYROLL</span>\r\n                        </div>\r\n                    </div>\r\n                </header>   \r\n                <div class=\"form-content\">\r\n                    <form class=\"form\" action=\"#\">\r\n                        <div class=\"form-head\">\r\n                            Employee Payroll Form\r\n                        </div>\r\n                        <div class=\"row-content\">\r\n                            <label class=\"label text\" for=\"name\">Name</label>\r\n                            <input class=\"input\" value={this.state.name} onChange={this.changeNameHandler} type=\"text\" id=\"name\" name=\"name\" placeholder=\"Enter Your name\" required></input>\r\n                            <error-output class=\"text-error\" for=\"text\"></error-output>\r\n                        </div>\r\n                        <div class=\"row-content\">\r\n                            <label class=\"label text\" for=\"profile\">Profile image</label>\r\n                            <div class=\"profile-radio-content\">\r\n                                <label>\r\n                                    <input type=\"radio\" id=\"profile1\" name=\"profile\" checked={this.state.profilePic === '../../assets/profile-images/Ellipse -3.png'}\r\n                                        value=\"../../assets/profile-images/Ellipse -3.png\" onChange={this.changeProfilePicHandler} required/>\r\n                                    <img class=\"profile\" id='image1' src={profile1}/>  \r\n                                </label>\r\n                                <label>\r\n                                    <input type=\"radio\" id=\"profile2\" name=\"profile\"\r\n                                        value=\"../../assets/profile-images/Ellipse -1.png\" checked={this.state.profilePic === '../../assets/profile-images/Ellipse -1.png'} onChange={this.changeProfilePicHandler} required/>\r\n                                    <img class=\"profile\" id='image2' src={profile2}/>  \r\n                                </label>\r\n                                <label>\r\n                                    <input type=\"radio\" id=\"profile3\" name=\"profile\" checked={this.state.profilePic === '../../assets/profile-images/Ellipse -8.png'}\r\n                                        value=\"../../assets/profile-images/Ellipse -8.png\" onChange={this.changeProfilePicHandler}  required/>\r\n                                    <img class=\"profile\" id='image3' src={profile3}/>  \r\n                                </label>\r\n                                <label>\r\n                                    <input type=\"radio\" id=\"profile4\" name=\"profile\" checked={this.state.profilePic === '../../assets/profile-images/Ellipse -7.png'}\r\n                                        value=\"../../assets/profile-images/Ellipse -7.png\" onChange={this.changeProfilePicHandler}  required/>\r\n                                    <img class=\"profile\" id='image4' src={profile4}/>  \r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row-content\">\r\n                            <label class=\"label text\" for=\"gender\">Gender</label>\r\n                            <div>\r\n                                <input type=\"radio\" id=\"male\" name=\"gender\" value='M' checked={this.state.gender === 'M'} onChange={this.changeGenderHandler}/>\r\n                                <label class=\"text\" for=\"male\">Male</label>\r\n                                <input type=\"radio\" id=\"female\" name=\"gender\" value='F' checked={this.state.gender === 'F'} onChange={this.changeGenderHandler}/>\r\n                                <label class=\"text\" for=\"female\">Female</label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row-content\">\r\n                            <label class=\"label text\" for=\"department\">Department</label>\r\n                            <div>\r\n                                <input class=\"checkbox\" type=\"checkbox\" id=\"hr\" name=\"department\" value=\"HR\" checked={this.state.departments.includes(\"HR\")} onChange={this.onCheckChange}/>\r\n                                <label class=\"text\" for=\"hr\">HR</label>\r\n                                <input class=\"checkbox\" type=\"checkbox\" id=\"sales\" name=\"department\" value=\"Sales\" checked={this.state.departments.includes(\"Sales\")} onChange={this.onCheckChange}/>\r\n                                <label class=\"text\" for=\"sales\">Sales</label>\r\n                                <input class=\"checkbox\" type=\"checkbox\" id=\"finance\" name=\"department\" value=\"finance\" checked={this.state.departments.includes(\"finance\")} onChange={this.onCheckChange} />\r\n                                <label class=\"text\" for=\"finance\">Finance</label>\r\n                                <input class=\"checkbox\" type=\"checkbox\" id=\"engineer\" name=\"department\" value=\"Engineer\" checked={this.state.departments.includes(\"Engineer\")} onChange={this.onCheckChange}/>\r\n                                <label class=\"text\" for=\"engineer\">Engineer</label>\r\n                                <input class=\"checkbox\" type=\"checkbox\" id=\"others\" name=\"department\" value=\"Others\" checked={this.state.departments.includes(\"Others\")} onChange={this.onCheckChange}/>\r\n                                <label class=\"text\" for=\"others\">Others</label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row-content\">\r\n                            <label class=\"label text\" for=\"salary\">Choose your salary: </label>\r\n                            <input class=\"input\" onChange={this.changeSalaryHandler} type=\"range\" name=\"salary\" id=\"salary\" min=\"300000\"\r\n                                    max=\"500000\" step=\"100\" value={this.state.salary}/>\r\n                            <output class=\"salary-output text\" for=\"salary\">{this.state.salary}</output>\r\n                        </div>\r\n                        <div class=\"row-content\">\r\n                        <label class=\"label text\" for=\"startDate\">Start Date</label>\r\n                        <div>\r\n                            <select id=\"day\" name=\"day\" value={this.state.day} onChange={this.changeDayHandler}> \r\n                                <option value=\"01\">1</option>\r\n                                <option value=\"02\">2</option>\r\n                                <option value=\"03\">3</option>\r\n                                <option value=\"04\">4</option>\r\n                                <option value=\"05\">5</option>\r\n                                <option value=\"06\">6</option>\r\n                                <option value=\"07\">7</option>\r\n                                <option value=\"08\">8</option>\r\n                                <option value=\"09\">9</option>\r\n                                <option value=\"10\">10</option>\r\n                                <option value=\"11\">11</option>\r\n                                <option value=\"12\">12</option>\r\n                                <option value=\"13\">13</option>\r\n                                <option value=\"14\">14</option>\r\n                                <option value=\"15\">15</option>\r\n                                <option value=\"16\">16</option>\r\n                                <option value=\"17\">17</option>\r\n                                <option value=\"18\">18</option>\r\n                                <option value=\"19\">19</option>\r\n                                <option value=\"20\">20</option>\r\n                                <option value=\"21\">21</option>\r\n                                <option value=\"22\">22</option>\r\n                                <option value=\"23\">23</option>\r\n                                <option value=\"24\">24</option>\r\n                                <option value=\"25\">25</option>\r\n                                <option value=\"26\">26</option>\r\n                                <option value=\"27\">27</option>\r\n                                <option value=\"28\">28</option>\r\n                                <option value=\"29\">29</option>\r\n                                <option value=\"30\">30</option>\r\n                                <option value=\"31\">31</option>\r\n                            </select>\r\n                            <select id=\"month\" value={this.state.month} name=\"Month\" onChange={this.changeMonthHandler}>\r\n                                <option value=\"01\">January</option>\r\n                                <option value=\"02\">Febuary</option>\r\n                                <option value=\"03\">March</option>\r\n                                <option value=\"04\">April</option>\r\n                                <option value=\"05\">May</option>\r\n                                <option value=\"06\">June</option>\r\n                                <option value=\"07\">July</option>\r\n                                <option value=\"08\">August</option>\r\n                                <option value=\"09\">September</option>\r\n                                <option value=\"10\">October</option>\r\n                                <option value=\"11\">November</option>\r\n                                <option value=\"12\">December</option>\r\n                            </select>\r\n                            <select id=\"year\" name=\"Year\" value={this.state.year} onChange={this.changeYearHandler}>\r\n                                <option value=\"2020\">2020</option>\r\n                                <option value=\"2019\">2019</option>\r\n                                <option value=\"2018\">2018</option>\r\n                                <option value=\"2017\">2017</option>\r\n                                <option value=\"2016\">2016</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row-content\">\r\n                        <label class=\"label text\" for=\"notes\">Notes</label>\r\n                        <textarea id=\"notes\" value={this.state.notes} onChange={this.changeNotesHandler} class=\"input\" name=\"Notes\" placeholder=\"\" style={{ height: '100%' }}></textarea>\r\n                    </div>\r\n                    <div class=\"buttonParent\">\r\n                        <a href=\"./employee_payroll_home.html\" class=\"resetButton button cancelButton\">Cancel</a>\r\n                        <div class=\"submit-reset\">\r\n                            <button type=\"submit\" class=\"button submitButton\" id=\"submitButton\" onClick={this.saveOrUpdateEmployee}>Submit</button>\r\n                            <button type=\"reset\" class=\"resetButton button\">Reset</button>\r\n                        </div>\r\n                    </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(PayrollForm)\r\n\r\n\r\n",["36","37"],"C:\\Users\\hp\\Desktop\\HelloWorld\\employee-payroll-react\\src\\App.js",["38","39"],"import logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router,Switch,Route,Redirect} from \"react-router-dom\";\nimport PayrollForm  from './components/payroll-form/payroll-form';\nimport Home from './components/home/home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/add-employee/:id\" component={PayrollForm}>\n            <PayrollForm />\n          </Route>\n          <Route path = \"/home\" component = {Home}>\n            <Home/>\n          </Route>\n        </Switch>\n      </Router>\n           \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\hp\\Desktop\\HelloWorld\\employee-payroll-react\\src\\index.js",[],"C:\\Users\\hp\\Desktop\\HelloWorld\\employee-payroll-react\\src\\reportWebVitals.js",[],"C:\\Users\\hp\\Desktop\\HelloWorld\\employee-payroll-react\\src\\services\\EmployeeService.js",[],"C:\\Users\\hp\\Desktop\\HelloWorld\\employee-payroll-react\\src\\components\\home\\home.jsx",["40","41"],{"ruleId":"42","severity":1,"message":"43","line":9,"column":9,"nodeType":"44","messageId":"45","endLine":9,"endColumn":18},{"ruleId":"42","severity":1,"message":"46","line":9,"column":19,"nodeType":"44","messageId":"45","endLine":9,"endColumn":23},{"ruleId":"47","severity":1,"message":"48","line":141,"column":38,"nodeType":"49","messageId":"50","endLine":141,"endColumn":67,"fix":"51"},{"ruleId":"52","severity":1,"message":"53","line":298,"column":37,"nodeType":"54","endLine":298,"endColumn":86},{"ruleId":"52","severity":1,"message":"53","line":303,"column":37,"nodeType":"54","endLine":303,"endColumn":86},{"ruleId":"52","severity":1,"message":"53","line":308,"column":37,"nodeType":"54","endLine":308,"endColumn":86},{"ruleId":"52","severity":1,"message":"53","line":313,"column":37,"nodeType":"54","endLine":313,"endColumn":86},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"42","severity":1,"message":"59","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":12},{"ruleId":"42","severity":1,"message":"60","line":3,"column":46,"nodeType":"44","messageId":"45","endLine":3,"endColumn":54},{"ruleId":"42","severity":1,"message":"43","line":11,"column":9,"nodeType":"44","messageId":"45","endLine":11,"endColumn":18},{"ruleId":"61","severity":1,"message":"62","line":85,"column":41,"nodeType":"54","endLine":93,"endColumn":52},"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property changeProfilePicHandler.","MemberExpression","unexpectedWhitespace",{"range":"63","text":"64"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"'logo' is defined but never used.","'Redirect' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",[5158,5160],".","no-global-assign","no-unsafe-negation"]